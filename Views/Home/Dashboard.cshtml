@using Hunarmis.Manager
@{
    ViewBag.Title = "Dashboard";

    var dt = SPManager.SP_Dashboard_TopLegend();

    //var dtGraph = SPManager.SP_Dashboard_Graphs();

}
@using Hunarmis.Helpers
<style>
    figure > div {
        height: 400px;
    }

    .WhiteFontChart .highcharts-label text {
        color: #fff !important;
        font-size: 12px !important;
        font-weight: 500 !important;
        fill: #fff !important;
    }

    .WhiteFontChart .highcharts-legend-item text {
        stroke: none !important;
        fill: #555 !important;
        font-size: 12px !important;
        font-weight: normal !important;
    }

    .WhiteFontChart .highcharts-axis-labels text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: normal !important;
        fill: #555 !important;
    }

    .WhiteFontChart .highcharts-axis text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: normal !important;
        fill: #555 !important;
    }

    .highcharts-text-outline {
        stroke: none !important;
        fill: #555 !important;
    }

    .highcharts-label text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: 500 !important;
        fill: #555 !important;
    }

    .highcharts-legend-item text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: normal !important;
        fill: #555 !important;
    }

    .highcharts-axis-labels text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: normal !important;
        fill: #555 !important;
    }

    .highcharts-axis text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: normal !important;
        fill: #555 !important;
    }

    .highcharts-axis text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: normal !important;
        fill: #555 !important;
    }

    .WhiteFontChart .highcharts-stack-labels text {
        color: #555 !important;
        font-size: 12px !important;
        font-weight: 500 !important;
        fill: #555 !important;
    }
</style>
<div class="container-fluid">
    <div class="row mt-20">
        <div class="col-xs-12 col-md-12">
            <div class="card card-box mb-10">
                <div class="row">
                    @if (dt != null && dt.Rows.Count > 0)
                    {
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="card card-box p-0 main-content-card bg-light-primary mb-0 shadow-none">
                                <div class="card-body" style="padding:15px;">
                                    <div class="d-flex align-items-center gap-2">
                                        <div class="flex-shrink-0">
                                            <i class="fa fa-pencil-square-o"></i>
                                        </div>
                                        <div>
                                            <div class="d-flex">
                                                <h3 class="f-26 count">@dt.Rows[0]["Enrollments"]</h3>
                                            </div>
                                        </div>
                                    </div>
                                    <h5 class="f-14" title="Enrollments">Enrollments</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="card card-box p-0 main-content-card bg-light-secondary mb-0 shadow-none">
                                <div class="card-body" style="padding:15px;">
                                    <div class="d-flex align-items-center gap-2">
                                        <div class="flex-shrink-0">
                                            <i class="fa fa-newspaper-o"></i>
                                        </div>
                                        <div>
                                            <div class="d-flex">
                                                <h3 class="f-26 count">@dt.Rows[0]["TrainingCompletions"]</h3>
                                            </div>
                                        </div>
                                    </div>
                                    <h5 class="f-14" title="Training Completions">Training Completions</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="card card-box p-0 main-content-card bg-light-tertiary mb-0 shadow-none">
                                <div class="card-body" style="padding:15px;">
                                    <div class="d-flex align-items-center gap-2">
                                        <div class="flex-shrink-0">
                                            <i class="fa fa-check" aria-hidden="true" style="position: absolute;color: #fff;font-size: 15px;"></i>
                                            <i class="fa fa-certificate"></i>
                                        </div>
                                        <div>
                                            <div class="d-flex">
                                                <h3 class="f-26 count">@dt.Rows[0]["LearnersCertified"]</h3>
                                            </div>
                                        </div>
                                    </div>
                                    <h5 class="f-14" title="Learners certified">Learners certified</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="card card-box p-0 main-content-card bg-light-info mb-0 shadow-none">
                                <div class="card-body" style="padding:15px;">
                                    <div class="d-flex align-items-center gap-2">
                                        <div class="flex-shrink-0">
                                            <i class="fa fa-briefcase"></i>
                                        </div>
                                        <div>
                                            <div class="d-flex">
                                                <h3 class="f-26 count">@dt.Rows[0]["Placements"]</h3>
                                            </div>
                                        </div>
                                    </div>
                                    <h5 class="f-14" title="Placements">Placements</h5>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="title"></div>
            <div class="tools">
                <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; width: 100%">
                    <i class="fa fa-calendar"></i>&nbsp;
                    <span></span> <i class="fa fa-caret-down"></i>
                </div>
            </div>
        </div>


        <div class="col-lg-6 col-md-6 col-sm-12 col-12">
            <div class="card card-box p-0">
                <div class="card-head">
                    <div class="title">Number of participants enrolled</div>
                    <div class="tools">
                        <select id="ddlSection2" class="form-control form-control-custom">
                            <option value="Location">Location</option>
                            <option value="Course">Course</option>
                        </select>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-xs-12 col-md-12">
                            <figure class="highcharts-figure WhiteFontChart" id="figureSection2_Location">
                                <div id="parent-container">
                                    <div id="containerSection2_Location"></div>
                                </div>
                            </figure>
                            <figure class="highcharts-figure WhiteFontChart" id="figureSection2_Course" style="display:none">
                                <div id="parent-container">
                                    <div id="containerSection2_Course"></div>
                                </div>
                            </figure>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
            <div class="card card-box p-0">
                <div class="card-head">
                    <div class="title">Pathways to Progress Intervention Areas</div>
                    <div class="tools">
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-xs-12 col-md-12">
                            <figure class="highcharts-figure">
                                <div id="parent-container">
                                    <div id="containermap"></div>
                                </div>
                            </figure>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12 col-12">
            <div class="card card-box p-0">
                <div class="card-head">
                    <div class="title">Number of participants trained</div>
                    <div class="tools">
                        <span class="badge badge-default" id="containerSection2_TrainedTotal"></span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-xs-12 col-md-12">
                            <figure class="highcharts-figure WhiteFontChart" id="figureSection2_Trained">
                                <div id="parent-container">
                                    <div id="containerSection2_Trained"></div>
                                </div>
                            </figure>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6 col-md-6 col-sm-12 col-12">
            <div class="card card-box p-0">
                <div class="card-head">
                    <div class="title">Number of participants placed</div>
                    <div class="tools">
                        <span class="badge badge-default" id="containerSection2_PlacedTotal"></span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-xs-12 col-md-12">
                            <figure class="highcharts-figure WhiteFontChart" id="figureSection2_Placed">
                                <div id="parent-container">
                                    <div id="containerSection2_Placed"></div>
                                </div>
                            </figure>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card card-box p-0">
                <div class="card-head">
                    <div class="title">Average Salary</div>
                    <div class="tools">
                        <select id="ddlSection3" class="form-control form-control-custom">
                            <option value="Location">Location</option>
                            <option value="Course">Course</option>
                            <option value="Industry">Industry</option>
                        </select>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-xs-12 col-md-12">
                            <figure class="highcharts-figure" id="figureSection3_Location">
                                <div id="parent-container">
                                    <div id="containerSection3_Location"></div>
                                </div>
                            </figure>
                            <figure class="highcharts-figure" id="figureSection3_Course" style="display:none">
                                <div id="parent-container">
                                    <div id="containerSection3_Course"></div>
                                </div>
                            </figure>
                            <figure class="highcharts-figure" id="figureSection3_Industry" style="display:none">
                                <div id="parent-container">
                                    <div id="containerSection3_Industry"></div>
                                </div>
                            </figure>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*<div style="padding: 0px 20px 20px;">
        <div style="font-size: 21px; color: #6a4566; font-weight: 700;">
            Participant Profile
        </div>
        <hr style="border: 4px double #f9841b; margin: 0px; " />
    </div>

    <div class="data-box-2">

        <div class="boxe flx2">
            <h2>
                Age Group Wise Distribution
            </h2>

            <div>
                <figure class="highcharts-figure">
                    <div id="parent-container">
                        <div id="containerSection4_AgeGroup"></div>
                    </div>
                </figure>
            </div>
        </div>

        <div class="boxe flx2">
            <h2>
                Location Wise Distribution
            </h2>

            <div>
                <figure class="highcharts-figure">
                    <div id="parent-container">
                        <div id="containerSection4_Location"></div>
                    </div>
                </figure>
            </div>
        </div>

    </div>*@

<script src="https://code.highcharts.com/highcharts.js"></script>

<script src="https://code.highcharts.com/maps/highmaps.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>
<script src="https://code.highcharts.com/stock/modules/drilldown.js"></script>
<script src="https://code.highcharts.com/maps/modules/map.js"></script>



<script src="~/Scripts/Map/india_st.js"></script>
<script src="~/Scripts/Map/maharashtra_district.js"></script>
<script src="~/Scripts/Map/District_shape_West_Bengal.js"></script>



<script>
    $('.count').each(function () {
        $(this).prop('Counter', 0).animate({
            Counter: $(this).text()
        }, {
            duration: 4000,
            easing: 'swing',
            step: function (now) {
                $(this).text(Math.ceil(now));
            }
        });
    });
    var startDate = "", endDate = "";
    $(document).ready(function () {

        var start = moment().startOf('year');//moment().subtract(29, 'days');
        var end = moment().endOf('year');//moment();
        startDate = start.format('YYYY-MM-DD');
        endDate = end.format('YYYY-MM-DD');


        function cb(start, end) {
            $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));

            startDate = start.format('YYYY-MM-DD');
            endDate = end.format('YYYY-MM-DD');

            console.log(startDate);
            console.log(endDate);

            section2();
            section3();
        }

        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                'This Year': [moment().startOf('year'), moment().endOf('year')],
                'All Time': [moment('2023-01-01'), moment()]
            }
        }, cb);

        cb(start, end);

        $('.tab-btn').on('click', function () {
            $('.tab-btn').removeClass('act');
            $(this).addClass('act');
        })


        $("#ddlSection1").change(function (e) {
            if ($(this).val() == 'Location') {
                $('#figureSection1_Course').hide();
                $('#figureSection1_Location').show();
            } else {
                $('#figureSection1_Course').show();
                $('#figureSection1_Location').hide();
            }
        });

        $("#ddlSection2").change(function (e) {
            if ($(this).val() == 'Location') {
                $('#figureSection2_Course').hide();
                $('#figureSection2_Location').show();
            } else {
                $('#figureSection2_Course').show();
                $('#figureSection2_Location').hide();
            }
        });

        $("#ddlSection3").change(function (e) {
            if ($(this).val() == 'Location') {
                $('#figureSection3_Course').hide();
                $('#figureSection3_Location').show();
                $('#figureSection3_Industry').hide();
            } else if ($(this).val() == 'Course') {
                $('#figureSection3_Course').show();
                $('#figureSection3_Location').hide();
                $('#figureSection3_Industry').hide();
            } else {
                $('#figureSection3_Course').hide();
                $('#figureSection3_Location').hide();
                $('#figureSection3_Industry').show();
            }
        });


        //section1();
        //section2();
        //section3();
        //section4();
    });

    function escapeRegExp(str) {
        return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
    }

    function replaceAll(str, find, replace) {
        return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);
    }

    function section1() {
        $.ajax({
            url: '@Url.Action("GetDashboard", "home")',
            data: { mode: 1 },
            async: false,
            success: function (result) {
                console.log(result);
                if (result.IsSuccess) {
                    var data = JSON.parse(result.Data)[0];

                    Graph(JSON.parse(data.CourseJsonData), 'containerSection1_Course', 'column', '', 'Course', '', 'CourseName');
                    Graph(JSON.parse(data.LocationJsonData), 'containerSection1_Location','column', '', 'Location', '', 'DistrictName');

                }
            }
        });
    }

    function section2() {
        $.ajax({
            url: '@Url.Action("GetDashboard", "home")',
            data: { mode: 2, startDate: startDate, endDate: endDate },

            async: false,
            success: function (result) {
                console.log(result);
                if (result.IsSuccess) {
                    var data = JSON.parse(result.Data)[0];

                    Graph(JSON.parse(data.CourseJsonData), 'containerSection2_Course', 'stack-bar', '', 'Course', '', 'CourseName', 'Gender');
                    Graph(JSON.parse(data.LocationJsonData), 'containerSection2_Location', 'stack-bar', '', 'Location', '', 'DistrictName', 'Gender');

                    Graph(JSON.parse(data.TrainedJsonData), 'containerSection2_Trained', 'stack-bar', '', 'Location', '', 'DistrictName', 'Gender');
                    Graph(JSON.parse(data.PlacedJsonData), 'containerSection2_Placed', 'stack-bar', '', 'Location', '', 'DistrictName', 'Gender');
                }
            }
        });
    }

    function section3() {
        $.ajax({
            url: '@Url.Action("GetDashboard", "home")',
            data: { mode: 3, startDate: startDate, endDate: endDate},
            async: false,
            success: function (result) {
                console.log(result);
                if (result.IsSuccess) {
                    var data = JSON.parse(result.Data)[0];
                    Graph(JSON.parse(data.CourseJsonData), 'containerSection3_Course', 'column-group', '', 'Course', '', 'CourseName', 'Gender');
                    Graph(JSON.parse(data.LocationJsonData), 'containerSection3_Location', 'column-group', '', 'Location', '', 'DistrictName', 'Gender');
                    Graph(JSON.parse(data.IndustryJsonData), 'containerSection3_Industry', 'column-group', '', 'Industry', '', 'IndustryName', 'Gender');
                }
            }
        });
    }

    function section4() {
        $.ajax({
            url: '@Url.Action("GetDashboard", "home")',
            data: { mode: 4},
            async: false,
            success: function (result) {
                console.log(result);
                if (result.IsSuccess) {
                    var data = JSON.parse(result.Data)[0];
                    Graph(JSON.parse(data.AgeGroupJsonData), 'containerSection4_AgeGroup', 'column-group', '', 'Age', '', 'AgeRange', 'Gender');
                    Graph(JSON.parse(data.LocationJsonData), 'containerSection4_Location', 'pie', '', 'Location', '', 'DistrictName', '');
                }
            }
        });
    }

    //function Graph(jsonData, selector, graphType ='column', title, xAxis, yAxis, property, groupProperty) {
    //    console.log(jsonData);
    //    var data = [];
    //    var categories = [];
    //    var series = [];
    //    var totals = [];
    //    var originalGraphType = graphType;
    //    categories = [...new Set(jsonData.map(item => item[property]))];

    //    if (graphType == 'bar-group') {
    //        graphType = 'bar';

    //        //categories = [...new Set(jsonData.map(item => item[property]))];
    //        const groups = [...new Set(jsonData.map(item => item[groupProperty]))];

    //        series = groups.map(key => ({
    //            name: key,
    //            data: categories.map(category => {
    //                const item = jsonData.find(d => d[property] === category && d[groupProperty] === key);
    //                return item ? item.Total : null;
    //            })
    //        }));

    //    }
    //    else if (graphType == 'stack-bar') {
    //        graphType = 'bar';
    //        // Prepare the series data
    //        const seriesData = {};
    //        //categories = [...new Set(jsonData.map(item => item[property]))];
    //        console.log(categories);
    //        jsonData.forEach(item => {
    //            if (!seriesData[item[groupProperty]]) {
    //                seriesData[item[groupProperty]] = [];
    //            }
    //            seriesData[item.Gender].push({
    //                name: item[property],
    //                y: item.Total,
    //                percentage: item.Percentage
    //            });
    //        });

    //        // Convert series data into Highcharts format
    //        series = Object.keys(seriesData).map(gender => ({
    //            name: gender,
    //            data: seriesData[gender]
    //        }));

    //        // Calculate total per course
    //        totals = {};
    //        jsonData.forEach(item => {
    //            if (!totals[item[property]]) {
    //                totals[item[property]] = 0;
    //            }
    //            totals[item[property]] += item.Total;
    //        });

    //        console.log(totals);
    //    }
    //    else if(graphType == 'column-group') {
    //        graphType = 'column';


    //        //categories = [...new Set(jsonData.map(item => item[property]))];
    //        const groups = [...new Set(jsonData.map(item => item[groupProperty]))];

    //        series = groups.map(key => ({
    //            name: key,
    //            dataLabels: {
    //                allowOverlap: true,
    //                rotation: 270,
    //                crop: false,
    //            },
    //            data: categories.map(category => {
    //                const item = jsonData.find(d => d[property] === category && d[groupProperty] === key);
    //                return item ? item.Total : null;
    //            })
    //        }));
    //        console.log(series);
    //    }
    //    else if (graphType == 'pie') {

    //        //categories = jsonData.map(item => item[property]);
    //        const totals = jsonData.map(item => item.Total);

    //        var seriesData = jsonData.map(item => ({
    //            name: item[property],
    //            y: item.Percentage,
    //            total: item.Total // Add total to each data point
    //        }));
    //        series = [{
    //            name: 'Percentage',
    //            colorByPoint: true,
    //            data: seriesData
    //        }];

    //        console.log(series);
    //    }
    //    else {

    //        //categories = jsonData.map(item => item[property]);
    //        const totals = jsonData.map(item => item.Total);

    //        series = [{
    //            showInLegend: false,
    //            name: property,
    //            data: totals
    //        }];
    //        console.log(series);
    //    }

    //    //for (var i = 0; i < jsonData.length; i++) {
    //    //    data.push({
    //    //        name: jsonData[i][property],
    //    //        y: jsonData[i].Total
    //    //    });
    //    //}
    //    colors = ['#4443a0', '#ae77b8', '#1D4E89', '#1C558E', '#1A5B92', '#16679A', '#0F80AA', '#2ec4b6'];
    //    Highcharts.chart(selector, {
    //        chart: {
    //            type: graphType,
    //            backgroundColor: 'rgba(0,0,0,0)',
    //            color: '#fff',
    //            plotBackgroundColor: null,
    //            plotBorderWidth: null,
    //            plotShadow: false,
    //            innerSize: '50%', // Make it a donut chart
    //        },
    //        title: {
    //            text: title,
    //            align: 'left',
    //            style: {

    //                //display: 'none'
    //            }
    //        },
    //        credits: {
    //            enabled: false
    //        },
    //        plotOptions: {
    //            series: {
    //                stacking: originalGraphType=='stack-bar' ? 'normal' : null,
    //                shadow: false,
    //                borderWidth: 0,
    //                dataLabels: {
    //                    enabled: true,
    //                    format: '{point.y:.0f}',
    //                    inside: originalGraphType == 'stack-bar', // Set this to false to place labels outside
    //                    crop: originalGraphType == 'stack-bar', // Prevent labels from being cropped
    //                    overflow: 'none', // Prevent labels from overflowing the chart area
    //                    format: '{point.y:.0f}',
    //                    //formatter: function () {
    //                    //    // Automatically place labels inside or outside
    //                    //    if (this.y < 25) { // Threshold (you can adjust this)
    //                    //        return `<span style="color:black;">${this.y}</span>`;
    //                    //    } else {
    //                    //        return `<span style="color:white;">${this.y}</span>`;
    //                    //    }
    //                    //},
    //                    style: {
    //                        fontSize: 12,
    //                        borderWidth: 0
    //                        //display: 'none'
    //                    }
    //                },

    //            },
    //            pie: {
    //                allowPointSelect: true,
    //                cursor: 'pointer',
    //                dataLabels: {
    //                    enabled: true,
    //                    format: '{point.name}: {point.y}%'
    //                },
    //                showInLegend: true
    //            },
    //            //column: {
    //            //    dataLabels: {
    //            //        enabled: true,
    //            //        inside: false,
    //            //        formatter: function () {
    //            //            return this.y;
    //            //        }
    //            //    }
    //            //}
    //        },
    //        tooltip: {
    //            headerFormat: '<span style="font-size:11px; color:red;">{series.name}</span><br>',
    //            //pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +               '<b>{point.y:.0f}</b><br/>'
    //            formatter: function () {
    //                console.log(this);
    //                // Check if point.total is not null or undefined
    //                const value = this.point.options && this.point.options.total
    //                    ? this.point.options.total
    //                    : this.point.y;

    //                return `<span style="font-size:12px; color:${this.color}">${this.series.name ? this.series.name : this.point.name}</span><br/>` +
    //                    `<span style="color:${this.point.color}">${this.point.name ? this.point.name : this.x}</span>: ` +
    //                    /*`<span style="color:#ddd;background:red;">${this.point.name ? this.point.name : this.x}</span>: ` +*/
    //                    `<b style="color:${this.color}">${value}</b><br/>`;
    //            }
    //        },
    //        colors: colors,
    //        xAxis: {
    //            categories: categories,
    //            //visible: false,
    //            labels: {
    //                //style: {
    //                //    fontSize: 12
    //                //},
    //            },
    //        },
    //        yAxis: {
    //            visible: false,
    //            labels: {
    //                style: {
    //                    //fontSize: 12
    //                    display:'none'
    //                },
    //            },
    //            title: {
    //                text: yAxis,
    //                //style: {
    //                //    fontSize: 12
    //                //},
    //            },
    //            stackLabels: {
    //                enabled: true,
    //                style: {
    //                    fontWeight: 'bold',
    //                    color: ( // theme
    //                        Highcharts.defaultOptions.title.style &&
    //                        Highcharts.defaultOptions.title.style.color
    //                    ) || 'gray'
    //                },
    //                formatter: function () {
    //                    console.log(this)
    //                    return this.total;
    //                }
    //            }
    //        },
    //        series: series
    //    });

    //}


</script>

<script>

    $(document).ready(function () {

        Load_DistrictMap();
    })
    function Load_DistrictMap() {
        $.ajax({
            url: '@Url.Action("GetDashboard", "home")',
            data: { mode: 4 },
            async: false,
            success: function (result) {
                console.log(result);
                if (result.IsSuccess) {
                    var data = JSON.parse(result.Data)[0];
                    var jsonObject = JSON.parse(data.LocationJsonData);
                    console.log(jsonObject);
                    var reportMapDivWidth = $("#containermapp").width();
                    var MapHeight = reportMapDivWidth > 620 ? 620 : null;
                    colors = ['#4443a0', '#ae77b8', '#9be0ba', '#4194ac', '#44449e', '#47a372', '#3466ab', '#8a3b99'];
                    for (var i = 0; i < jsonObject.length; i++) {
                        //jsonObject[i].color = colors[i % colors.length];
                        jsonObject[i].showInLegend = true;
                    }

                    var jsonObjectMumbai = jsonObject.find(x => x.DistrictName == "Mumbai");

                    var obj = JSON.parse(JSON.stringify(jsonObjectMumbai));
                    obj.DistrictName = "Thane";
                    jsonObject.push(obj);

                    obj = JSON.parse(JSON.stringify(jsonObjectMumbai));
                    obj.DistrictName = "Raigarh";
                    jsonObject.push(obj);

                    obj = JSON.parse(JSON.stringify(jsonObjectMumbai));
                    obj.DistrictName = "Palghar";
                    jsonObject.push(obj);

                    obj = JSON.parse(JSON.stringify(jsonObjectMumbai));
                    obj.DistrictName = "Mumbai Suburban";
                    jsonObject.push(obj);

                    obj = JSON.parse(JSON.stringify(jsonObjectMumbai));
                    obj.DistrictName = "Mumbai City";
                    jsonObject.push(obj);

                    Highcharts.mapChart('containermap', {

                        chart: {
                            borderWidth: 1,
                            borderColor: '#00000',
                            height: MapHeight,
                            //  map: topology
                        },
                        title: {
                            text:''
                        },
                        credits: {
                            enabled: false
                        },
                        //legend: {
                        //    layout: 'vertical',
                        //    align: 'right',
                        //    verticalAlign: 'middle',
                        //    itemMarginBottom: 10,
                        //    symbolHeight: 18,
                        //    title: {
                        //        text: 'Districts'
                        //    }
                        //},
                        mapNavigation: {
                            enabled: true,
                            buttonOptions: {
                                verticalAlign: 'bottom'
                            }
                        },
                        tooltip: {
                            shared: true
                        },
                        //colors: colors,
                        series: [
                            {
                                showInLegend: false,
                                borderColor: 'black',
                                borderWidth: 0.2,
                                name: 'India',
                                mapData: Highcharts.maps['custom/StatesIndia'],
                            }
                            ,
                            {
                                showInLegend: false,
                                borderColor: 'green',
                                color: '#13e5138f',
                                borderWidth: 1,
                                mapData: Highcharts.maps['custom/Maharashtra'],
                                data: jsonObject,
                                name: 'Maharashtra',
                                joinBy: ['DistrictName', 'DistrictName'],
                                dataLabels: {
                                    enabled: false,
                                    color: '#000000',
                                    format: '{point.DistrictName}',
                                    style: {
                                        fontSize: 9,
                                        fontWeight: 700
                                    },
                                },
                                tooltip: {
                                    pointFormat: '<b> {point.DistrictName} : {point.Total} / ( {point.Percentage} % ) </b>'
                                }
                            }
                            ,
                            {
                                showInLegend: false,
                                borderColor: '#0d47a1',
                                color: '#5c5bf1',
                                borderWidth: 1,
                                mapData: Highcharts.maps['custom/West_Bengal'],
                                data: jsonObject,
                                name: 'West Bengal',
                                joinBy: ['DistrictName', 'DistrictName'],
                                dataLabels: {
                                    enabled: false,
                                    color: '#000000',
                                    format: '{point.DistrictName}',
                                    style: {
                                        fontSize: 9,
                                        fontWeight: 700
                                    },
                                },
                                tooltip: {
                                    pointFormat: '<b> {point.DistrictName} : {point.Total} / ( {point.Percentage} % ) </b>'
                                }
                            }
                        ]
                    });
                }
            }
        });
    }
</script>