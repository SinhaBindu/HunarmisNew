@model Hunarmis.Models.UserMappedModel
@using Hunarmis.Manager
@{
    ViewBag.Title = "User Mapped";
    ViewBag.TitleIcon = "fa fa-user";
    ViewBag.SemiTitle = "User Mapped Lists";
    ViewBag.SemiTitleLink = "/Master/UserMappedList";
}
<style>
    #page-content {
        padding: 0px !important;
    }
</style>

<div id="page-content">
    <div class="container-fluid">
        <div class="row mt-20">
            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                <div class="card card-box p-0">
                    <div class="card-body">
                        @using (Html.BeginForm("GetUserDetailData", "Master", FormMethod.Post, new { id = "submission-form" }))
                        {
                            <fieldset class="fieldset-card">
                                <div class="col-md-12">@Html.Partial("_Alerts")</div>
                                <div class="row">
                                    <div class="col-xs-12 col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.RoleId, CommonModel.GetRoleList(false), null, htmlAttributes: new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-md-3">
                                        <div class="form-group">
                                            <div class="control-label" style="margin-bottom:5px;">&nbsp;</div>
                                            <div id="div-download"></div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <div class="row">
                                <div class="col-xs-12 col-md-12">
                                    <div id="submission-data">
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Scripts/CustomValidator.js"></script>*@
    <script src="~/Scripts/Custom/Master.js"></script>

    <script>
        $(document).ready(function () {

            $('select[name="RoleId"]').val(7).attr("selected", true).change();
            BindData();
            $('#RoleId').change(function () {
                BindData();
            });

        });
        function CheckUnchecked(cur) {
            debugger;
            if ($(cur).attr('id') == 'selectAll') {
                $('#DataList tbody tr .check').each(function (i, item) {
                    $(item).prop('checked', $(cur).prop('checked'));
                });
            } else {
                var isallChecked = true;
                $('#DataList tbody tr .check').each(function (i, item) {
                    if (!$(item).prop('checked')) {
                        isallChecked = false;
                        return;
                    }
                });
                $('#selectAll').prop('checked', isallChecked);
            }
        }

        function BindData() {
            $('#submission-data').removeClass("text-danger");
            var url = $('#submission-form').attr("action");
            var formData = $('#submission-form').serialize();
            var RoleId = $('#RoleId').val();
            $.ajax({
                url: url,
                type: "Post",
                data: { 'RoleId': RoleId, 'CheckBox': 1 },
                success: function (resp) {
                    if (resp.IsSuccess) {
                        $('#submission-data').html(resp.Data);
                        //$('select').multiSelect();

                        if ($.fn.dataTable.isDataTable('#DataList')) {
                            $("#DataList").dataTable().fnDestroy();
                        }
                        table = $('#DataList').DataTable({
                            //scrollY: "400px",
                            //scrollX: true,
                            //scrollCollapse: true,
                            paging: false,
                            //"ordering": false,
                            //pageLength: 50,

                            fixedColumns: {
                                leftColumns: 1,
                                rightColumns: 1
                            },
                            buttons: [{
                                extend: 'excel', text: '<span><i class="fa fa-download"></i>Export</span>', title: 'User Lists',//$('#IDDistrict option:selected').text() +
                                className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                                filename: 'User List',
                                exportOptions: { modifier: { page: 'all' } }
                            }],
                        });
                        $('.dataTables_filter input[type="search"]').css(
                            { 'width': '500px', 'display': 'inline-block' }
                        );
                        $('#div-download').empty();
                        table.buttons().container().appendTo($('#div-download'));

                        //GET MULTISELECTED VALUES IN DataTable
                        $('#DataList tbody tr').each(function (i, row) {
                            var values = [];
                            var hdval = $(row).find('#hd' + i).val();
                            if (hdval != '' && hdval != undefined) {
                                hdval = $(row).find('#hd' + i).val().split(",");
                                for (var i in hdval) {
                                    var optionVal = hdval[i];
                                    $(row).find("select").find("option[value=" + optionVal + "]").prop("selected", "selected");
                                }
                            }
                        });
                        $('.multiple').multiselect({
                            includeSelectAllOption: true,
                            enableFiltering: true,
                            includeFilterClearBtn: true,
                            enableCaseInsensitiveFiltering: true
                        });

                    }
                    else {
                        $('#submission-data').html("Record Not Found !!");//TO DO
                        $('#submission-data').addClass("text-danger");//TO DO
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    $('#submission-data').html(errormsg);
                }
            });
        }
        //Submit Data
        function CUData(MappedId, UserId, RoleId, TACId) {
            debugger;
            var IsCheck = false;


            var TACIdarr = $('#' + TACId).val();
            if (TACIdarr != null && TACIdarr != undefined && TACIdarr.length != 0) {
                IsCheck = true;
                TACIdarr = TACIdarr.join(',');
            }
            else {
                toastr.error("Error", 'Please choose one Training Center');
            }

            if (UserId && IsCheck) {
                $.ajax({
                    url: document.baseURI + "/Master/CUUserMapped",
                    type: "Post",
                    data: { 'MappedId': MappedId, 'UserId': UserId, 'RoleId': RoleId, 'TACId': TACIdarr },
                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    success: function (resp) {
                        if (resp.StatusType == "success") {
                            toastr.success("Success", resp.Message);
                            BindData();
                            //jQuery.event.trigger("ajaxStop");
                        }
                        else {
                            toastr.error("Error", resp.Message);
                        }
                    },
                    error: function (req, error) {
                        if (error === 'error') { error = req.statusText; }
                        var errormsg = 'There was a communication error: ' + error;
                        toastr.error("Error", errormsg);
                        //jQuery.event.trigger("ajaxStop");
                        return false;
                    }
                });
            }
            else {
                return false;
            }

        }

    </script>
}
