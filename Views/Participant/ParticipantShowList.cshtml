@model Hunarmis.Models.FilterModel
@using Hunarmis.Manager
@{
    ViewBag.Title = "Participant List";
    ViewBag.TitleIcon = "fa fa-user";
    ViewBag.SemiTitle = "Add Participant";
    ViewBag.SemiTitleLink = "/Participant/AddParticipant";
    string IsSadmin = string.Empty;
}
<style>
    #page-content {
        padding: 0px !important;
    }
    table.dataTable thead th, table.dataTable thead td, .table thead th, .table thead td {
        vertical-align: middle !important;
        border-bottom: none;
        background: #fafafa;
        padding: 9px 10px;
    }

    .box-gap {
        padding: 0 10px !important
    }

    .dt-input {
        margin-right: 10px
    }

    .panel {
        min-height: 500px;
    }
    .dt-buttons{
        display:inline-block !important;
    }
    div.dt-buttons > .dt-button, div.dt-buttons > div.dt-button-split .dt-button {
        color: #fff !important
    }

    .downs-btn {
        float: right
    }


    .modal {
        padding: 20px !important
    }

    .modal-dialog {
        width: 100%;
        border: 2px solid #F5F5F5
    }

    .modal-title {
        text-align: center;
        font-size: 24px;
        color: #000
    }

    .clos-btn {
        float: right;
        padding: 3px 7px;
        background: #D34829;
        color: #fff;
        border-radius: 5px;
        font-size: 14px;
        border: none;
        margin-top: -20px
    }

    /*.basic-info div {
        flex-basis: 48%
    }*/
    .panel-bodys {
        margin-bottom: 10px;
    }

    .btn-mat {
        background: #009CFF;
        padding: 2px 8px;
        border-radius: 4px;
        color: #fff;
        border: none
    }

    .down-btn a:hover, .down-btn:hover {
        color: #fff !important
    }

    .semi-title {
        background: #2F17B5;
    }

    .panel-bodys h5 {
        color: #e17c0f;
    }

    .box-bg {
        padding: 15px;
        background: #F5F5F5;
        border-radius: 5px;
    }

        .box-bg label {
            text-align: left !important;
            font-weight: bold;
            color: #000;
        }

    .modal-header {
        padding: 10px 15px 0;
    }

    .regis {
        color: #2F17B5
    }

    .form-flex {
        display: flex;
        gap: 30px
    }

        .form-flex div {
            flex: 1;
        }

    .UploadCheckFile {
        background: #fff;
        width: 100%;
        padding: 4px 0;
    }
</style>

<div id="page-content">
    <div class="container-fluid">
        <div class="row mt-20">
            <div class="col-xs-12 col-md-12">
                <div class="card card-box p-0">
                    <div class="card-head" style="display:none;">
                        <div class="title">
                            <!--<i class="fa fa-users spacerright2"></i>-->
                            @*@ViewBag.Title*@
                            <!--<strong id="sg-title" class="text-info"></strong>-->
                        </div>
                        <div class="tools">
                        </div>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("GetPartList", "Participant", FormMethod.Get, new { @class = "form-padding loader", @id = "formid" , role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate"}))
                        {<div class="col-md-12">@Html.Partial("_Alerts")</div>
                        <fieldset class="fieldset-card">
                            <div class="row">
                                @if (!User.IsInRole(CommonModel.RoleNameCont.Viewer))
                                {
                                    <div class="col-xs-12 col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.Type, CommonModel.GetPCIEdubridge(2).OrderBy(x => x.Text), htmlAttributes: new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                                    <div class="col-xs-12 col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.CourseId, new List<SelectListItem>(), "Select", htmlAttributes: new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.Gender, CommonModel.GetGender(true).OrderBy(x => x.Text), htmlAttributes: new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-xs-12 col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FromDt, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(m => m.FromDt, null, new { htmlAttributes = new { @class = "form-control datepickermonth" } })
                                            @Html.ValidationMessageFor(model => model.FromDt, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-xs-12 col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ToDt, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(m => m.ToDt, null, new { htmlAttributes = new { @class = "form-control datepickermonth" } })
                                            @Html.ValidationMessageFor(model => model.ToDt, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-xs-12 col-md-6">
                                        <div class="form-group">
                                            <div style="margin-top:5px;">&nbsp;</div>
                                            <span class="check-spacer">
                                                <input type="submit" name="btnsubmit" id="btnsubmit" class="btn-register" value="Filter" />
                                            </span>
                                            <span class="check-spacer">
                                                <a href="~/Participant/ParticipantShowList" class="btn-reset"><i class="fa fa-refresh"></i></a>
                                            </span>
                                            @if (!User.IsInRole(CommonModel.RoleNameCont.Viewer))
                                            {
                                                <span id="div-download"></span>
                                            }
                                        </div>
                                    </div>
                                </div>

                        </fieldset>

                    }
                        <div class="row">
                            <div class="col-xs-12 col-md-12">
                                <div id="subdata"></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


<div id="div-popmodel"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Custom/Master.js"></script>

    <script>
        $(document).ready(function () {

            $("#FromDt").datepicker({
                //defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 1,
                dateFormat: "dd-M-yy",
                onClose: function (selectedDate) {
                    $("#ToDt").datepicker("option", "minDate", selectedDate);
                }
            });
            $("#ToDt").datepicker({
                //defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 1,
                dateFormat: "dd-M-yy",
                onClose: function (selectedDate) {
                    $("#FromDt").datepicker("option", "maxDate", selectedDate);
                }
            });

            BindGetCoursesPCIEdubridge('CourseId', '', '1');
            $('select[name="CourseId"]').find('option').eq(1).attr("selected", true).change();
            BindData();
            //setTimeout(function () {
            //    //$('select[name="CourseId"]').find('option').eq(1).attr("selected", true).change();
            //    $('select[name="CourseId"]').val('2');
            //    BindData();
            //}, 500);
            $("#formid").submit(function (e) {
                e.preventDefault();
                BindData();
            });

        });

        function customRangeEndComplt(input) {
            return {
                minDate: (input.id == "DateofOffer" ? $("#DOJStartDate").datepicker("getDate") : new Date((currentYear - 1), 12, 1))
            };
        }

        function BindData() {
            debugger;
            $("#subdata").html('');
            $('#global-loader').css('background', 'transparent').css('display', 'block');
            var filtermodel = new Object();
            var CourseId = $('#CourseId option:selected').text() == 'All' ? "0" : $('#CourseId option:selected').text();
            filtermodel.Gender = $('#Gender').val() == '' ? '0' : $('#Gender').val();
            filtermodel.FromDt = $('#FromDt').val() == '' ? '0' : $('#FromDt').val();
            filtermodel.ToDt = $('#ToDt').val() == '' ? '0' : $('#ToDt').val();
            filtermodel.Type = $('#Type').val() == '' ? '0' : $('#Type').val();
            filtermodel.CourseId = CourseId;
            var formData = $('#formid').serialize();

            $.ajax({
                type: "Get",
                url: document.baseURI + "/Participant/GetPartShowList",
                data: filtermodel,//JSON.stringify({ 'Roles': '' }),
                //cache: false,
               // async: false,
                success: function (res) {
                    if (res.IsSuccess) {
                        $('#global-loader').css('background', 'transparent').css('display', 'none');
                        $("#subdata").html(res.Data);

                        if ($.fn.dataTable.isDataTable('#tbl')) {
                            $("#tbl").dataTable().fnDestroy();
                        }
                        table = $('#tbl').DataTable({
                            //scrollY: "400px",
                            //scrollX: true,
                            //scrollCollapse: true,
                            //paging: false,
                            "dom": '<"pull-left"f><"pull-right"l>tip',
                            pageLength: 100,
                            fixedColumns: {
                                leftColumns: 1,
                                rightColumns: 1
                            },
                            order: [[0, 'asc']],
                            buttons: [{
                                extend: 'excel', text: '<span><i class="fa fa-download"></i>Download</span>', title: 'Participant Lists',//$('#IDDistrict option:selected').text() +
                                className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                                filename: 'Participant List',
                                exportOptions: { modifier: { page: 'all' } }
                            }],
                        });
                        $('.dataTables_filter input[type="search"]').css(
                            { 'width': '300px', 'display': 'inline-block' }
                        );
                        $('#div-download').empty();
                        table.buttons().container().appendTo($('#div-download'));
                    }
                    else {
                        $("#subdata").html('<h4 class="text-danger text-center">' + res.Data +'</h4>');
                        $('#global-loader').css('background', 'transparent').css('display', 'none');
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //$('#subdata').html("<h4 class='text-center text-danger'>" + errormsg +"!</h4>");
                    $('#global-loader').css('background', 'transparent').css('display', 'none');
                    //Do To Message display
                }
            });
        }

        function BindPlacementDetailData(ParticipantId, PlacementTrackerId) {
            $("#div-viewpopmodel").html('');
            var filtermodel = new Object();
            filtermodel.ParticipantId = ParticipantId;
            filtermodel.PlacementTrackerId = PlacementTrackerId;
            $('#global-loader').css('background', 'transparent').css('display', 'block');
            if (PlacementTrackerId != '' && PlacementTrackerId != undefined && PlacementTrackerId != null) {
                $.ajax({
                    type: "Get",
                    url: document.baseURI + "/Participant/PlacementTrackerDetail",
                    data: filtermodel,
                    //cache: false,
                   // async: false,
                    success: function (res) {
                        if (res) {
                            $('#global-loader').css('background', 'transparent').css('display', 'none');
                            $('#div-viewpopmodel').html(res);
                            $("#myModal").modal({ backdrop: "static" });
                        }
                        else {
                            $("#div-viewpopmodel").html("<h4 class='text-center text-danger'>" + res + "!</h4>");
                            $('#global-loader').css('background', 'transparent').css('display', 'none');
                        }
                    },
                    error: function (req, error) {
                        if (error === 'error') { error = req.statusText; }
                        var errormsg = 'There was a communication error: ' + error;
                        $('#div-viewpopmodel').html("<h4 class='text-center text-danger'>" + errormsg + "!</h4>");
                        $('#global-loader').css('background', 'transparent').css('display', 'none');
                        //Do To Message display
                    }
                });
            }
            else {
                $('#div-popmodel').html("<h4 class='text-center text-danger'> Placement Tracker Details Not Found !</h4>");
            }

        }

        function setTwoNumberDecimal(event) {
            if (this.value != null) {
                this.value = parseFloat(this.value).toFixed(2);
            }
        }


    </script>
}

